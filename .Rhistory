library(tidyverse)
library(dplyr)
library(usmap)
library(lubridate)
library(randomForest)
library(splines)
library(pdp)
library(string)
library(ggplot2)
library(rsample)
library(modelr)
library(caret)
library(gbm)
library(ggmap)
library(glmnet)
library(rpart) # a powerful ML library that is used for building classification and regression trees
library(gamlr)
library(rpart.plot)
library(data.table)
library(DMwR2)
library(knitr)
# read data
restate <- read.csv('C:/Users/Haokun Zhang/Desktop/github/Data-mining-project/data/restatement_data.csv', header=TRUE, sep=",", row.names = NULL)
head(restate)
# shift all columns one step to the left
names(restate)[1:(ncol(restate)-1)] <- names(restate)[2:ncol(restate)]
restate[, ncol(restate)] <- NULL
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(6:20))
View(restate2)
View(restate2)
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(6:20, # removed company information such as physical address or phone number
Restatement.Key))
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(5:20, # removed company information such as physical address or phone number
Restatement.Key)) # removed unique restatement ID for each case
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(5:20, # removed company information such as physical address or phone number
Restatement.Key)) # removed unique restatement ID for each case
View(restate2)
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(4, 6:20, # removed company information such as physical address or phone number
Restatement.Key)) # removed unique restatement ID for each case
View(restate2)
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
# functions
clean_string <- function(string) {
cleaned <- gsub("\\|\\|", "", string)
return(cleaned)
}
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(X, X.1, # removed unrelated empty columns
4,
6:20, # removed company information such as physical address or phone number
Restatement.Key # removed unique restatement ID for each case
))
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
View(restate2)
restate2$Auditor...Opinion.Period.End.During.Restated.Period <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period, clean_string)
head(restate2)
cleaned <- gsub("\\|\\|", "", string)
# functions
clean_string <- function(string) {
cleaned <- gsub("\\|\\|", "", string)
return(cleaned)
}
restate2$Auditor...Opinion.Period.End.During.Restated.Period <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period, clean_string)
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
head(restate2)
# functions
clean_string <- function(string) {
cleaned <- gsub("^\\||\\|$", "", string)
return(cleaned)
}
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
head(restate2)
class(Auditor...During.Restated.Period)
class(restate2$Auditor...During.Restated.Period)
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- restate2$Auditor...During.Restated.Period %>%
mutate(Text = gsub("\\|", "", Text))
# functions
clean_string <- function(string) {
cleaned <- gsub(""\\|"", "", string)
return(cleaned)
}
# functions
clean_string <- function(string) {
cleaned <- gsub("\\|", "", string)
return(cleaned)
}
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period, clean_string)
head(restate2)
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
restate2$Auditor...During.Restated.Period.Keys <- lapply(restate2$Auditor...During.Restated.Period.Keys, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period,Keys <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period,Keys, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period.Keys <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period.Keys, clean_string)
head(restate2)
# remove rows with empty value on net income or stakeholder equity
restate2 <- restate %>% drop_na(Cumulative.Change.in.Net.Income)
restate2 <- restate %>% drop_na(Cumulative.Change.in.Stockholder.Equity)
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(X, X.1, # removed unrelated empty columns
4,
6:20, # removed company information such as physical address or phone number
Restatement.Key # removed unique restatement ID for each case
))
# remove columns unrelated to research objects
restate2 = subset(restate2, select = -c(X, X.1, # removed unrelated empty columns
4,
6:20, # removed company information such as physical address or phone number
Restatement.Key # removed unique restatement ID for each case
))
# clean text data, remove any symbols
restate2$Auditor...During.Restated.Period <- lapply(restate2$Auditor...During.Restated.Period, clean_string)
restate2$Auditor...During.Restated.Period.Keys <- lapply(restate2$Auditor...During.Restated.Period.Keys, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period, clean_string)
restate2$Auditor...Opinion.Period.End.During.Restated.Period.Keys <- lapply(restate2$Auditor...Opinion.Period.End.During.Restated.Period.Keys, clean_string)
head(restate2)
restate2$Current_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...Current, ignore.case = TRUE)
# define a dummy variable that is 1 if auditor is one of Big 4 or 0 if not Big 4
big4_firms <- c("Ernst & Young", "Deloitte & Touche", "KPMG", "PricewaterhouseCoopers")
restate2$Current_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...Current, ignore.case = TRUE)
# Convert logical values to 1s and 0s
restate2$Current_big4 <- as.integer(restate2$Current_big4)
head(restate2)
View(restate2)
View(restate2)
# determine whether auditor is big 4
restate2$Current_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...Current, ignore.case = TRUE) # determine auditor...current
restate2$Disclosure_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...At.Disclosure.Date, ignore.case = TRUE) # determine auditor...at disclosure date
restate2$resated_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...During.Restated.Period, ignore.case = TRUE) # determine auditor during restated period
restate2$opinion_big4 <- grepl(paste(big4_firms, collapse = "|"), restate2$Auditor...Opinion.Period.End.During.Restated.Period, ignore.case = TRUE) # determine auditor during opinion period
# Convert logical values to 1s and 0s
restate2$Current_big4 <- as.integer(restate2$Current_big4)
restate2$Disclosure_big4 <- as.integer(restate2$Disclosure_big4)
restate2$resated_big4 <- as.integer(restate2$resated_big4)
restate2$opinion_big4 <- as.integer(restate2$opinion_big4)
head(restate2)
class(restate2$Restated.Period.Begin)
# calculate duration of restate period
restate2$Restated.Period.Begin <- as.Date(restate2$Restated.Period.Begin, format = "%Y-%m-%d") # first, convert date to the correct format
# measure the duration
restate2$duration_in_days <- as.numeric(difftime(restate2$Restated.Period.Ended, restate2$Restated.Period.Begin, units = "days"))
head(restate2)
# measure the duration
restate2$duration_in_days <- as.integer(difftime(restate2$Restated.Period.Ended, restate2$Restated.Period.Begin, units = "days"))
head(restate2)
# drop rows with any na value
restate3 <- na.omit(restate2)
View(restate3)
